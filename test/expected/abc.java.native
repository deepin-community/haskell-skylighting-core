[ [ ( KeywordTok , "import" )
  , ( NormalTok , " " )
  , ( ImportTok , "java" )
  , ( OperatorTok , "." )
  , ( ImportTok , "util" )
  , ( OperatorTok , "." )
  , ( ImportTok , "Arrays" )
  , ( OperatorTok , ";" )
  ]
, []
, [ ( KeywordTok , "public" )
  , ( NormalTok , " " )
  , ( KeywordTok , "class" )
  , ( NormalTok , " ABC" )
  , ( OperatorTok , "{" )
  ]
, [ ( NormalTok , "        " )
  , ( KeywordTok , "private" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "static" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "void" )
  , ( NormalTok , " " )
  , ( FunctionTok , "swap" )
  , ( OperatorTok , "(" )
  , ( DataTypeTok , "int" )
  , ( NormalTok , " i" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( DataTypeTok , "int" )
  , ( NormalTok , " j" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( BuiltInTok , "Object" )
  , ( KeywordTok , "..." )
  , ( NormalTok , " arr" )
  , ( OperatorTok , "){" )
  ]
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "Object" )
  , ( NormalTok , " tmp " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " arr" )
  , ( OperatorTok , "[" )
  , ( NormalTok , "i" )
  , ( OperatorTok , "];" )
  ]
, [ ( NormalTok , "                arr" )
  , ( OperatorTok , "[" )
  , ( NormalTok , "i" )
  , ( OperatorTok , "]" )
  , ( NormalTok , " " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " arr" )
  , ( OperatorTok , "[" )
  , ( NormalTok , "j" )
  , ( OperatorTok , "];" )
  ]
, [ ( NormalTok , "                arr" )
  , ( OperatorTok , "[" )
  , ( NormalTok , "j" )
  , ( OperatorTok , "]" )
  , ( NormalTok , " " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " tmp" )
  , ( OperatorTok , ";" )
  ]
, [ ( NormalTok , "        " ) , ( OperatorTok , "}" ) ]
, [ ( NormalTok , "        " ) ]
, [ ( NormalTok , "        " )
  , ( KeywordTok , "public" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "static" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "boolean" )
  , ( NormalTok , " " )
  , ( FunctionTok , "canMakeWord" )
  , ( OperatorTok , "(" )
  , ( BuiltInTok , "String" )
  , ( NormalTok , " word" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( BuiltInTok , "String" )
  , ( KeywordTok , "..." )
  , ( NormalTok , " blocks" )
  , ( OperatorTok , ")" )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  ]
, [ ( NormalTok , "            " )
  , ( ControlFlowTok , "if" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "word" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "length" )
  , ( OperatorTok , "()" )
  , ( NormalTok , " " )
  , ( OperatorTok , "==" )
  , ( NormalTok , " " )
  , ( DecValTok , "0" )
  , ( OperatorTok , ")" )
  ]
, [ ( NormalTok , "                " )
  , ( ControlFlowTok , "return" )
  , ( NormalTok , " " )
  , ( KeywordTok , "true" )
  , ( OperatorTok , ";" )
  ]
, [ ( NormalTok , "         " ) ]
, [ ( NormalTok , "            " )
  , ( DataTypeTok , "char" )
  , ( NormalTok , " c " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " " )
  , ( BuiltInTok , "Character" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "toUpperCase" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "word" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "charAt" )
  , ( OperatorTok , "(" )
  , ( DecValTok , "0" )
  , ( OperatorTok , "));" )
  ]
, [ ( NormalTok , "            " )
  , ( ControlFlowTok , "for" )
  , ( OperatorTok , "(" )
  , ( DataTypeTok , "int" )
  , ( NormalTok , " i " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " " )
  , ( DecValTok , "0" )
  , ( OperatorTok , ";" )
  , ( NormalTok , " i " )
  , ( OperatorTok , "<" )
  , ( NormalTok , " blocks" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "length" )
  , ( OperatorTok , ";" )
  , ( NormalTok , " i" )
  , ( OperatorTok , "++)" )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  ]
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "String" )
  , ( NormalTok , " b " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " blocks" )
  , ( OperatorTok , "[" )
  , ( NormalTok , "i" )
  , ( OperatorTok , "];" )
  ]
, [ ( NormalTok , "                " )
  , ( ControlFlowTok , "if" )
  , ( OperatorTok , "(" )
  , ( BuiltInTok , "Character" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "toUpperCase" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "b" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "charAt" )
  , ( OperatorTok , "(" )
  , ( DecValTok , "0" )
  , ( OperatorTok , "))" )
  , ( NormalTok , " " )
  , ( OperatorTok , "!=" )
  , ( NormalTok , " c " )
  , ( OperatorTok , "&&" )
  , ( NormalTok , " " )
  , ( BuiltInTok , "Character" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "toUpperCase" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "b" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "charAt" )
  , ( OperatorTok , "(" )
  , ( DecValTok , "1" )
  , ( OperatorTok , "))" )
  , ( NormalTok , " " )
  , ( OperatorTok , "!=" )
  , ( NormalTok , " c" )
  , ( OperatorTok , ")" )
  ]
, [ ( NormalTok , "                    " )
  , ( ControlFlowTok , "continue" )
  , ( OperatorTok , ";" )
  ]
, [ ( NormalTok , "                " )
  , ( FunctionTok , "swap" )
  , ( OperatorTok , "(" )
  , ( DecValTok , "0" )
  , ( OperatorTok , "," )
  , ( NormalTok , " i" )
  , ( OperatorTok , "," )
  , ( NormalTok , " blocks" )
  , ( OperatorTok , ");" )
  ]
, [ ( NormalTok , "                " )
  , ( ControlFlowTok , "if" )
  , ( OperatorTok , "(" )
  , ( FunctionTok , "canMakeWord" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "word" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "substring" )
  , ( OperatorTok , "(" )
  , ( DecValTok , "1" )
  , ( OperatorTok , ")," )
  , ( NormalTok , " " )
  , ( BuiltInTok , "Arrays" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "copyOfRange" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "blocks" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( DecValTok , "1" )
  , ( OperatorTok , "," )
  , ( NormalTok , " blocks" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "length" )
  , ( OperatorTok , ")))" )
  ]
, [ ( NormalTok , "                    " )
  , ( ControlFlowTok , "return" )
  , ( NormalTok , " " )
  , ( KeywordTok , "true" )
  , ( OperatorTok , ";" )
  ]
, [ ( NormalTok , "                " )
  , ( FunctionTok , "swap" )
  , ( OperatorTok , "(" )
  , ( DecValTok , "0" )
  , ( OperatorTok , "," )
  , ( NormalTok , " i" )
  , ( OperatorTok , "," )
  , ( NormalTok , " blocks" )
  , ( OperatorTok , ");" )
  ]
, [ ( NormalTok , "            " ) , ( OperatorTok , "}" ) ]
, [ ( NormalTok , "         " ) ]
, [ ( NormalTok , "            " )
  , ( ControlFlowTok , "return" )
  , ( NormalTok , " " )
  , ( KeywordTok , "false" )
  , ( OperatorTok , ";" )
  ]
, [ ( NormalTok , "        " ) , ( OperatorTok , "}" ) ]
, [ ( NormalTok , "        " ) ]
, [ ( NormalTok , "        " )
  , ( KeywordTok , "public" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "static" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "void" )
  , ( NormalTok , " " )
  , ( FunctionTok , "main" )
  , ( OperatorTok , "(" )
  , ( BuiltInTok , "String" )
  , ( OperatorTok , "[]" )
  , ( NormalTok , " args" )
  , ( OperatorTok , "){" )
  ]
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "String" )
  , ( OperatorTok , "[]" )
  , ( NormalTok , " blocks " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( StringTok , "\"BO\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"XK\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"DQ\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"CP\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"NA\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  ]
, [ ( NormalTok , "                                " )
  , ( StringTok , "\"GT\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"RE\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"TG\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"QD\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"FS\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  ]
, [ ( NormalTok , "                                " )
  , ( StringTok , "\"JW\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"HU\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"VI\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"AN\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"OB\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  ]
, [ ( NormalTok , "                                " )
  , ( StringTok , "\"ER\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"FS\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"LY\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"PC\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"ZM\"" )
  , ( OperatorTok , "};" )
  ]
, []
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "System" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "out" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "println" )
  , ( OperatorTok , "(" )
  , ( StringTok , "\"" )
  , ( SpecialCharTok , "\\\"\\\"" )
  , ( StringTok , ": \"" )
  , ( NormalTok , " " )
  , ( OperatorTok , "+" )
  , ( NormalTok , " " )
  , ( FunctionTok , "canMakeWord" )
  , ( OperatorTok , "(" )
  , ( StringTok , "\"\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " blocks" )
  , ( OperatorTok , "));" )
  ]
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "System" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "out" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "println" )
  , ( OperatorTok , "(" )
  , ( StringTok , "\"A: \"" )
  , ( NormalTok , " " )
  , ( OperatorTok , "+" )
  , ( NormalTok , " " )
  , ( FunctionTok , "canMakeWord" )
  , ( OperatorTok , "(" )
  , ( StringTok , "\"A\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " blocks" )
  , ( OperatorTok , "));" )
  ]
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "System" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "out" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "println" )
  , ( OperatorTok , "(" )
  , ( StringTok , "\"BARK: \"" )
  , ( NormalTok , " " )
  , ( OperatorTok , "+" )
  , ( NormalTok , " " )
  , ( FunctionTok , "canMakeWord" )
  , ( OperatorTok , "(" )
  , ( StringTok , "\"BARK\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " blocks" )
  , ( OperatorTok , "));" )
  ]
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "System" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "out" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "println" )
  , ( OperatorTok , "(" )
  , ( StringTok , "\"book: \"" )
  , ( NormalTok , " " )
  , ( OperatorTok , "+" )
  , ( NormalTok , " " )
  , ( FunctionTok , "canMakeWord" )
  , ( OperatorTok , "(" )
  , ( StringTok , "\"book\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " blocks" )
  , ( OperatorTok , "));" )
  ]
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "System" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "out" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "println" )
  , ( OperatorTok , "(" )
  , ( StringTok , "\"treat: \"" )
  , ( NormalTok , " " )
  , ( OperatorTok , "+" )
  , ( NormalTok , " " )
  , ( FunctionTok , "canMakeWord" )
  , ( OperatorTok , "(" )
  , ( StringTok , "\"treat\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " blocks" )
  , ( OperatorTok , "));" )
  ]
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "System" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "out" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "println" )
  , ( OperatorTok , "(" )
  , ( StringTok , "\"COMMON: \"" )
  , ( NormalTok , " " )
  , ( OperatorTok , "+" )
  , ( NormalTok , " " )
  , ( FunctionTok , "canMakeWord" )
  , ( OperatorTok , "(" )
  , ( StringTok , "\"COMMON\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " blocks" )
  , ( OperatorTok , "));" )
  ]
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "System" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "out" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "println" )
  , ( OperatorTok , "(" )
  , ( StringTok , "\"SQuAd: \"" )
  , ( NormalTok , " " )
  , ( OperatorTok , "+" )
  , ( NormalTok , " " )
  , ( FunctionTok , "canMakeWord" )
  , ( OperatorTok , "(" )
  , ( StringTok , "\"SQuAd\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " blocks" )
  , ( OperatorTok , "));" )
  ]
, [ ( NormalTok , "                " )
  , ( BuiltInTok , "System" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "out" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "println" )
  , ( OperatorTok , "(" )
  , ( StringTok , "\"CONFUSE: \"" )
  , ( NormalTok , " " )
  , ( OperatorTok , "+" )
  , ( NormalTok , " " )
  , ( FunctionTok , "canMakeWord" )
  , ( OperatorTok , "(" )
  , ( StringTok , "\"CONFUSE\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " blocks" )
  , ( OperatorTok , "));" )
  ]
, [ ( NormalTok , "                " ) ]
, [ ( NormalTok , "        " ) , ( OperatorTok , "}" ) ]
, [ ( OperatorTok , "}" ) ]
]
