[ [ ( PreprocessorTok , "#include " )
  , ( ImportTok , "<stdio.h>" )
  ]
, [ ( PreprocessorTok , "#include " )
  , ( ImportTok , "<ctype.h>" )
  ]
, []
, [ ( DataTypeTok , "int" )
  , ( NormalTok , " can_make_words" )
  , ( OperatorTok , "(" )
  , ( DataTypeTok , "char" )
  , ( NormalTok , " " )
  , ( OperatorTok , "**" )
  , ( NormalTok , "b" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( DataTypeTok , "char" )
  , ( NormalTok , " " )
  , ( OperatorTok , "*" )
  , ( NormalTok , "word" )
  , ( OperatorTok , ")" )
  ]
, [ ( OperatorTok , "{" ) ]
, [ ( NormalTok , "        " )
  , ( DataTypeTok , "int" )
  , ( NormalTok , " i" )
  , ( OperatorTok , "," )
  , ( NormalTok , " ret " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " " )
  , ( DecValTok , "0" )
  , ( OperatorTok , "," )
  , ( NormalTok , " c " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " toupper" )
  , ( OperatorTok , "(*" )
  , ( NormalTok , "word" )
  , ( OperatorTok , ");" )
  ]
, []
, [ ( PreprocessorTok
    , "#define SWAP(a, b) if (a != b) { char * tmp = a; a = b; b = tmp; }"
    )
  ]
, []
, [ ( NormalTok , "        " )
  , ( ControlFlowTok , "if" )
  , ( NormalTok , " " )
  , ( OperatorTok , "(!" )
  , ( NormalTok , "c" )
  , ( OperatorTok , ")" )
  , ( NormalTok , " " )
  , ( ControlFlowTok , "return" )
  , ( NormalTok , " " )
  , ( DecValTok , "1" )
  , ( OperatorTok , ";" )
  ]
, [ ( NormalTok , "        " )
  , ( ControlFlowTok , "if" )
  , ( NormalTok , " " )
  , ( OperatorTok , "(!" )
  , ( NormalTok , "b" )
  , ( OperatorTok , "[" )
  , ( DecValTok , "0" )
  , ( OperatorTok , "])" )
  , ( NormalTok , " " )
  , ( ControlFlowTok , "return" )
  , ( NormalTok , " " )
  , ( DecValTok , "0" )
  , ( OperatorTok , ";" )
  ]
, []
, [ ( NormalTok , "        " )
  , ( ControlFlowTok , "for" )
  , ( NormalTok , " " )
  , ( OperatorTok , "(" )
  , ( NormalTok , "i " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " " )
  , ( DecValTok , "0" )
  , ( OperatorTok , ";" )
  , ( NormalTok , " b" )
  , ( OperatorTok , "[" )
  , ( NormalTok , "i" )
  , ( OperatorTok , "]" )
  , ( NormalTok , " " )
  , ( OperatorTok , "&&" )
  , ( NormalTok , " " )
  , ( OperatorTok , "!" )
  , ( NormalTok , "ret" )
  , ( OperatorTok , ";" )
  , ( NormalTok , " i" )
  , ( OperatorTok , "++)" )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  ]
, [ ( NormalTok , "                " )
  , ( ControlFlowTok , "if" )
  , ( NormalTok , " " )
  , ( OperatorTok , "(" )
  , ( NormalTok , "b" )
  , ( OperatorTok , "[" )
  , ( NormalTok , "i" )
  , ( OperatorTok , "][" )
  , ( DecValTok , "0" )
  , ( OperatorTok , "]" )
  , ( NormalTok , " " )
  , ( OperatorTok , "!=" )
  , ( NormalTok , " c " )
  , ( OperatorTok , "&&" )
  , ( NormalTok , " b" )
  , ( OperatorTok , "[" )
  , ( NormalTok , "i" )
  , ( OperatorTok , "][" )
  , ( DecValTok , "1" )
  , ( OperatorTok , "]" )
  , ( NormalTok , " " )
  , ( OperatorTok , "!=" )
  , ( NormalTok , " c" )
  , ( OperatorTok , ")" )
  , ( NormalTok , " " )
  , ( ControlFlowTok , "continue" )
  , ( OperatorTok , ";" )
  ]
, [ ( NormalTok , "                SWAP" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "b" )
  , ( OperatorTok , "[" )
  , ( NormalTok , "i" )
  , ( OperatorTok , "]," )
  , ( NormalTok , " b" )
  , ( OperatorTok , "[" )
  , ( DecValTok , "0" )
  , ( OperatorTok , "]);" )
  ]
, [ ( NormalTok , "                ret " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " can_make_words" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "b " )
  , ( OperatorTok , "+" )
  , ( NormalTok , " " )
  , ( DecValTok , "1" )
  , ( OperatorTok , "," )
  , ( NormalTok , " word " )
  , ( OperatorTok , "+" )
  , ( NormalTok , " " )
  , ( DecValTok , "1" )
  , ( OperatorTok , ");" )
  ]
, [ ( NormalTok , "                SWAP" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "b" )
  , ( OperatorTok , "[" )
  , ( NormalTok , "i" )
  , ( OperatorTok , "]," )
  , ( NormalTok , " b" )
  , ( OperatorTok , "[" )
  , ( DecValTok , "0" )
  , ( OperatorTok , "]);" )
  ]
, [ ( NormalTok , "        " ) , ( OperatorTok , "}" ) ]
, []
, [ ( NormalTok , "        " )
  , ( ControlFlowTok , "return" )
  , ( NormalTok , " ret" )
  , ( OperatorTok , ";" )
  ]
, [ ( OperatorTok , "}" ) ]
, []
, [ ( DataTypeTok , "int" )
  , ( NormalTok , " main" )
  , ( OperatorTok , "(" )
  , ( DataTypeTok , "void" )
  , ( OperatorTok , ")" )
  ]
, [ ( OperatorTok , "{" ) ]
, [ ( NormalTok , "        " )
  , ( DataTypeTok , "char" )
  , ( OperatorTok , "*" )
  , ( NormalTok , " blocks" )
  , ( OperatorTok , "[]" )
  , ( NormalTok , " " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  ]
, [ ( NormalTok , "                " )
  , ( StringTok , "\"BO\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"XK\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"DQ\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"CP\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"NA\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  ]
, [ ( NormalTok , "                " )
  , ( StringTok , "\"GT\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"RE\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"TG\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"QD\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"FS\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  ]
, [ ( NormalTok , "                " )
  , ( StringTok , "\"JW\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"HU\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"VI\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"AN\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"OB\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  ]
, [ ( NormalTok , "                " )
  , ( StringTok , "\"ER\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"FS\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"LY\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"PC\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"ZM\"" )
  , ( OperatorTok , "," )
  ]
, [ ( NormalTok , "                " )
  , ( DecValTok , "0" )
  , ( NormalTok , " " )
  , ( OperatorTok , "};" )
  ]
, []
, [ ( NormalTok , "        " )
  , ( DataTypeTok , "char" )
  , ( NormalTok , " " )
  , ( OperatorTok , "*" )
  , ( NormalTok , "words" )
  , ( OperatorTok , "[]" )
  , ( NormalTok , " " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  ]
, [ ( NormalTok , "                " )
  , ( StringTok , "\"\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"A\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"BARK\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"BOOK\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"TREAT\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"COMMON\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"SQUAD\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"Confuse\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( DecValTok , "0" )
  ]
, [ ( NormalTok , "        " ) , ( OperatorTok , "};" ) ]
, []
, [ ( NormalTok , "        " )
  , ( DataTypeTok , "char" )
  , ( NormalTok , " " )
  , ( OperatorTok , "**" )
  , ( NormalTok , "w" )
  , ( OperatorTok , ";" )
  ]
, [ ( NormalTok , "        " )
  , ( ControlFlowTok , "for" )
  , ( NormalTok , " " )
  , ( OperatorTok , "(" )
  , ( NormalTok , "w " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " words" )
  , ( OperatorTok , ";" )
  , ( NormalTok , " " )
  , ( OperatorTok , "*" )
  , ( NormalTok , "w" )
  , ( OperatorTok , ";" )
  , ( NormalTok , " w" )
  , ( OperatorTok , "++)" )
  ]
, [ ( NormalTok , "                printf" )
  , ( OperatorTok , "(" )
  , ( StringTok , "\"%s" )
  , ( SpecialCharTok , "\\t" )
  , ( StringTok , "%d" )
  , ( SpecialCharTok , "\\n" )
  , ( StringTok , "\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( OperatorTok , "*" )
  , ( NormalTok , "w" )
  , ( OperatorTok , "," )
  , ( NormalTok , " can_make_words" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "blocks" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( OperatorTok , "*" )
  , ( NormalTok , "w" )
  , ( OperatorTok , "));" )
  ]
, []
, [ ( NormalTok , "        " )
  , ( ControlFlowTok , "return" )
  , ( NormalTok , " " )
  , ( DecValTok , "0" )
  , ( OperatorTok , ";" )
  ]
, [ ( OperatorTok , "}" ) ]
]
