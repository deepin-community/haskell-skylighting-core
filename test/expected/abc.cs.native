[ [ ( KeywordTok , "using" )
  , ( NormalTok , " System" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "Collections" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "Generic" )
  , ( OperatorTok , ";" )
  ]
, [ ( KeywordTok , "using" )
  , ( NormalTok , " System" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "Linq" )
  , ( OperatorTok , ";" )
  ]
, []
, [ ( DataTypeTok , "void" )
  , ( NormalTok , " " )
  , ( FunctionTok , "Main" )
  , ( OperatorTok , "()" )
  ]
, [ ( OperatorTok , "{" ) ]
, [ ( NormalTok , "        List" )
  , ( OperatorTok , "<" )
  , ( DataTypeTok , "string" )
  , ( OperatorTok , ">" )
  , ( NormalTok , " blocks " )
  , ( OperatorTok , "=" )
  ]
, [ ( NormalTok , "        " )
  , ( KeywordTok , "new" )
  , ( NormalTok , " List" )
  , ( OperatorTok , "<" )
  , ( DataTypeTok , "string" )
  , ( OperatorTok , ">()" )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( NormalTok , " " )
  , ( StringTok , "\"bo\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"xk\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"dq\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"cp\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"na\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"gt\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"re\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"tg\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"qd\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"fs\"" )
  , ( OperatorTok , "," )
  ]
, [ ( NormalTok , "                " )
  , ( StringTok , "\"jw\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"hu\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"vi\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"an\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"ob\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"er\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"fs\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"ly\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"pc\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"zm\"" )
  , ( NormalTok , " " )
  , ( OperatorTok , "};" )
  ]
, [ ( NormalTok , "        List" )
  , ( OperatorTok , "<" )
  , ( DataTypeTok , "string" )
  , ( OperatorTok , ">" )
  , ( NormalTok , " words " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " " )
  , ( KeywordTok , "new" )
  , ( NormalTok , " List" )
  , ( OperatorTok , "<" )
  , ( DataTypeTok , "string" )
  , ( OperatorTok , ">()" )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  ]
, [ ( NormalTok , "                " )
  , ( StringTok , "\"A\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"BARK\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"BOOK\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"TREAT\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"COMMON\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"SQUAD\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( StringTok , "\"CONFUSE\"" )
  , ( OperatorTok , "};" )
  ]
, [ ( NormalTok , "        " ) ]
, [ ( NormalTok , "        " )
  , ( DataTypeTok , "var" )
  , ( NormalTok , " solver " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " " )
  , ( KeywordTok , "new" )
  , ( NormalTok , " " )
  , ( FunctionTok , "ABC" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "blocks" )
  , ( OperatorTok , ");" )
  ]
, [ ( NormalTok , "        " ) ]
, [ ( NormalTok , "        " )
  , ( KeywordTok , "foreach" )
  , ( OperatorTok , "(" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "var" )
  , ( NormalTok , " word " )
  , ( KeywordTok , "in" )
  , ( NormalTok , " words" )
  , ( OperatorTok , ")" )
  ]
, [ ( NormalTok , "        " ) , ( OperatorTok , "{" ) ]
, [ ( NormalTok , "                Console" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "WriteLine" )
  , ( OperatorTok , "(" )
  , ( StringTok , "\"{0} :{1}\"" )
  , ( OperatorTok , "," )
  , ( NormalTok , " word" )
  , ( OperatorTok , "," )
  , ( NormalTok , " solver" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "CanMake" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "word" )
  , ( OperatorTok , "));" )
  ]
, [ ( NormalTok , "        " ) , ( OperatorTok , "}" ) ]
, [ ( OperatorTok , "}" ) ]
, []
, [ ( KeywordTok , "class" ) , ( NormalTok , " ABC" ) ]
, [ ( OperatorTok , "{" ) ]
, [ ( NormalTok , "        " )
  , ( KeywordTok , "readonly" )
  , ( NormalTok , " Dictionary" )
  , ( OperatorTok , "<" )
  , ( DataTypeTok , "char" )
  , ( OperatorTok , "," )
  , ( NormalTok , " List" )
  , ( OperatorTok , "<" )
  , ( DataTypeTok , "int" )
  , ( OperatorTok , ">>" )
  , ( NormalTok , " _blockDict " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " " )
  , ( KeywordTok , "new" )
  , ( NormalTok , " Dictionary" )
  , ( OperatorTok , "<" )
  , ( DataTypeTok , "char" )
  , ( OperatorTok , "," )
  , ( NormalTok , " List" )
  , ( OperatorTok , "<" )
  , ( DataTypeTok , "int" )
  , ( OperatorTok , ">>();" )
  ]
, [ ( NormalTok , "        " )
  , ( DataTypeTok , "bool" )
  , ( OperatorTok , "[]" )
  , ( NormalTok , " _used" )
  , ( OperatorTok , ";" )
  ]
, [ ( NormalTok , "        " )
  , ( DataTypeTok , "int" )
  , ( NormalTok , " _nextBlock" )
  , ( OperatorTok , ";" )
  ]
, []
, [ ( NormalTok , "        " )
  , ( KeywordTok , "readonly" )
  , ( NormalTok , " List" )
  , ( OperatorTok , "<" )
  , ( DataTypeTok , "string" )
  , ( OperatorTok , ">" )
  , ( NormalTok , " _blocks" )
  , ( OperatorTok , ";" )
  ]
, []
, [ ( NormalTok , "        " )
  , ( KeywordTok , "private" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "void" )
  , ( NormalTok , " " )
  , ( FunctionTok , "AddBlockChar" )
  , ( OperatorTok , "(" )
  , ( DataTypeTok , "char" )
  , ( NormalTok , " c" )
  , ( OperatorTok , ")" )
  ]
, [ ( NormalTok , "        " ) , ( OperatorTok , "{" ) ]
, [ ( NormalTok , "                " )
  , ( KeywordTok , "if" )
  , ( NormalTok , " " )
  , ( OperatorTok , "(!" )
  , ( NormalTok , "_blockDict" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "ContainsKey" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "c" )
  , ( OperatorTok , "))" )
  ]
, [ ( NormalTok , "                " ) , ( OperatorTok , "{" ) ]
, [ ( NormalTok , "                        _blockDict" )
  , ( OperatorTok , "[" )
  , ( NormalTok , "c" )
  , ( OperatorTok , "]" )
  , ( NormalTok , " " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " " )
  , ( KeywordTok , "new" )
  , ( NormalTok , " List" )
  , ( OperatorTok , "<" )
  , ( DataTypeTok , "int" )
  , ( OperatorTok , ">();" )
  ]
, [ ( NormalTok , "                " ) , ( OperatorTok , "}" ) ]
, [ ( NormalTok , "                _blockDict" )
  , ( OperatorTok , "[" )
  , ( NormalTok , "c" )
  , ( OperatorTok , "]." )
  , ( FunctionTok , "Add" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "_nextBlock" )
  , ( OperatorTok , ");" )
  ]
, [ ( NormalTok , "        " ) , ( OperatorTok , "}" ) ]
, []
, [ ( NormalTok , "        " )
  , ( KeywordTok , "private" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "void" )
  , ( NormalTok , " " )
  , ( FunctionTok , "AddBlock" )
  , ( OperatorTok , "(" )
  , ( DataTypeTok , "string" )
  , ( NormalTok , " block" )
  , ( OperatorTok , ")" )
  ]
, [ ( NormalTok , "        " ) , ( OperatorTok , "{" ) ]
, [ ( NormalTok , "                " )
  , ( FunctionTok , "AddBlockChar" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "block" )
  , ( OperatorTok , "[" )
  , ( DecValTok , "0" )
  , ( OperatorTok , "]);" )
  ]
, [ ( NormalTok , "                " )
  , ( FunctionTok , "AddBlockChar" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "block" )
  , ( OperatorTok , "[" )
  , ( DecValTok , "1" )
  , ( OperatorTok , "]);" )
  ]
, [ ( NormalTok , "                _nextBlock" )
  , ( OperatorTok , "++;" )
  ]
, [ ( NormalTok , "        " ) , ( OperatorTok , "}" ) ]
, []
, [ ( NormalTok , "        " )
  , ( KeywordTok , "public" )
  , ( NormalTok , " " )
  , ( FunctionTok , "ABC" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "List" )
  , ( OperatorTok , "<" )
  , ( DataTypeTok , "string" )
  , ( OperatorTok , ">" )
  , ( NormalTok , " blocks" )
  , ( OperatorTok , ")" )
  ]
, [ ( NormalTok , "        " ) , ( OperatorTok , "{" ) ]
, [ ( NormalTok , "                _blocks " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " blocks" )
  , ( OperatorTok , ";" )
  ]
, [ ( NormalTok , "                " )
  , ( KeywordTok , "foreach" )
  , ( NormalTok , " " )
  , ( OperatorTok , "(" )
  , ( DataTypeTok , "var" )
  , ( NormalTok , " block " )
  , ( KeywordTok , "in" )
  , ( NormalTok , " blocks" )
  , ( OperatorTok , ")" )
  ]
, [ ( NormalTok , "                " ) , ( OperatorTok , "{" ) ]
, [ ( NormalTok , "                        " )
  , ( FunctionTok , "AddBlock" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "block" )
  , ( OperatorTok , ");" )
  ]
, [ ( NormalTok , "                " ) , ( OperatorTok , "}" ) ]
, [ ( NormalTok , "        " ) , ( OperatorTok , "}" ) ]
, []
, [ ( NormalTok , "        " )
  , ( KeywordTok , "public" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "bool" )
  , ( NormalTok , " " )
  , ( FunctionTok , "CanMake" )
  , ( OperatorTok , "(" )
  , ( DataTypeTok , "string" )
  , ( NormalTok , " word" )
  , ( OperatorTok , ")" )
  ]
, [ ( NormalTok , "        " ) , ( OperatorTok , "{" ) ]
, [ ( NormalTok , "                word " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " word" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "ToLower" )
  , ( OperatorTok , "();" )
  ]
, [ ( NormalTok , "                " )
  , ( KeywordTok , "if" )
  , ( NormalTok , " " )
  , ( OperatorTok , "(" )
  , ( NormalTok , "word" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "Length" )
  , ( NormalTok , " " )
  , ( OperatorTok , ">" )
  , ( NormalTok , " _blockDict" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "Count" )
  , ( OperatorTok , ")" )
  ]
, [ ( NormalTok , "                " ) , ( OperatorTok , "{" ) ]
, [ ( NormalTok , "                        " )
  , ( KeywordTok , "return" )
  , ( NormalTok , " " )
  , ( KeywordTok , "false" )
  , ( OperatorTok , ";" )
  ]
, [ ( NormalTok , "                " ) , ( OperatorTok , "}" ) ]
, [ ( NormalTok , "                _used " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " " )
  , ( KeywordTok , "new" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "bool" )
  , ( OperatorTok , "[" )
  , ( NormalTok , "_blocks" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "Count" )
  , ( OperatorTok , "];" )
  ]
, [ ( NormalTok , "                " )
  , ( KeywordTok , "return" )
  , ( NormalTok , " " )
  , ( FunctionTok , "TryMake" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "word" )
  , ( OperatorTok , ");" )
  ]
, [ ( NormalTok , "        " ) , ( OperatorTok , "}" ) ]
, []
, [ ( NormalTok , "        " )
  , ( KeywordTok , "public" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "bool" )
  , ( NormalTok , " " )
  , ( FunctionTok , "TryMake" )
  , ( OperatorTok , "(" )
  , ( DataTypeTok , "string" )
  , ( NormalTok , " word" )
  , ( OperatorTok , ")" )
  ]
, [ ( NormalTok , "        " ) , ( OperatorTok , "{" ) ]
, [ ( NormalTok , "                " )
  , ( KeywordTok , "if" )
  , ( NormalTok , " " )
  , ( OperatorTok , "(" )
  , ( NormalTok , "word " )
  , ( OperatorTok , "==" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "string" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "Empty" )
  , ( OperatorTok , ")" )
  ]
, [ ( NormalTok , "                " ) , ( OperatorTok , "{" ) ]
, [ ( NormalTok , "                        " )
  , ( KeywordTok , "return" )
  , ( NormalTok , " " )
  , ( KeywordTok , "true" )
  , ( OperatorTok , ";" )
  ]
, [ ( NormalTok , "                " ) , ( OperatorTok , "}" ) ]
, [ ( NormalTok , "                " )
  , ( DataTypeTok , "var" )
  , ( NormalTok , " blocks " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " _blockDict" )
  , ( OperatorTok , "[" )
  , ( NormalTok , "word" )
  , ( OperatorTok , "[" )
  , ( DecValTok , "0" )
  , ( OperatorTok , "]]." )
  , ( FunctionTok , "Where" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "b " )
  , ( OperatorTok , "=>" )
  , ( NormalTok , " " )
  , ( OperatorTok , "!" )
  , ( NormalTok , "_used" )
  , ( OperatorTok , "[" )
  , ( NormalTok , "b" )
  , ( OperatorTok , "]);" )
  ]
, [ ( NormalTok , "                " )
  , ( KeywordTok , "foreach" )
  , ( NormalTok , " " )
  , ( OperatorTok , "(" )
  , ( DataTypeTok , "var" )
  , ( NormalTok , " block " )
  , ( KeywordTok , "in" )
  , ( NormalTok , " blocks" )
  , ( OperatorTok , ")" )
  ]
, [ ( NormalTok , "                " ) , ( OperatorTok , "{" ) ]
, [ ( NormalTok , "                        _used" )
  , ( OperatorTok , "[" )
  , ( NormalTok , "block" )
  , ( OperatorTok , "]" )
  , ( NormalTok , " " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " " )
  , ( KeywordTok , "true" )
  , ( OperatorTok , ";" )
  ]
, [ ( NormalTok , "                        " )
  , ( KeywordTok , "if" )
  , ( NormalTok , " " )
  , ( OperatorTok , "(" )
  , ( FunctionTok , "TryMake" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "word" )
  , ( OperatorTok , "." )
  , ( FunctionTok , "Substring" )
  , ( OperatorTok , "(" )
  , ( DecValTok , "1" )
  , ( OperatorTok , ")))" )
  ]
, [ ( NormalTok , "                        " )
  , ( OperatorTok , "{" )
  ]
, [ ( NormalTok , "                                " )
  , ( KeywordTok , "return" )
  , ( NormalTok , " " )
  , ( KeywordTok , "true" )
  , ( OperatorTok , ";" )
  ]
, [ ( NormalTok , "                        " )
  , ( OperatorTok , "}" )
  ]
, [ ( NormalTok , "                        _used" )
  , ( OperatorTok , "[" )
  , ( NormalTok , "block" )
  , ( OperatorTok , "]" )
  , ( NormalTok , " " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " " )
  , ( KeywordTok , "false" )
  , ( OperatorTok , ";" )
  ]
, [ ( NormalTok , "                " ) , ( OperatorTok , "}" ) ]
, [ ( NormalTok , "                " )
  , ( KeywordTok , "return" )
  , ( NormalTok , " " )
  , ( KeywordTok , "false" )
  , ( OperatorTok , ";" )
  ]
, [ ( NormalTok , "        " ) , ( OperatorTok , "}" ) ]
, [ ( OperatorTok , "}" ) ]
, []
]
