[ [ ( PreprocessorTok , "#include " )
  , ( ImportTok , "<iostream>" )
  ]
, [ ( PreprocessorTok , "#include " )
  , ( ImportTok , "<vector>" )
  ]
, [ ( PreprocessorTok , "#include " )
  , ( ImportTok , "<string>" )
  ]
, [ ( PreprocessorTok , "#include " ) , ( ImportTok , "<set>" ) ]
, [ ( PreprocessorTok , "#include " )
  , ( ImportTok , "<cctype>" )
  ]
, []
, []
, [ ( KeywordTok , "typedef" )
  , ( NormalTok , " " )
  , ( BuiltInTok , "std::" )
  , ( NormalTok , "pair" )
  , ( OperatorTok , "<" )
  , ( DataTypeTok , "char" )
  , ( OperatorTok , "," )
  , ( DataTypeTok , "char" )
  , ( OperatorTok , ">" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "item_t" )
  , ( OperatorTok , ";" )
  ]
, [ ( KeywordTok , "typedef" )
  , ( NormalTok , " " )
  , ( BuiltInTok , "std::" )
  , ( NormalTok , "vector" )
  , ( OperatorTok , "<" )
  , ( DataTypeTok , "item_t" )
  , ( OperatorTok , ">" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "list_t" )
  , ( OperatorTok , ";" )
  ]
, []
, [ ( DataTypeTok , "bool" )
  , ( NormalTok , " can_make_word" )
  , ( OperatorTok , "(" )
  , ( AttributeTok , "const" )
  , ( NormalTok , " " )
  , ( BuiltInTok , "std::" )
  , ( NormalTok , "string" )
  , ( OperatorTok , "&" )
  , ( NormalTok , " w" )
  , ( OperatorTok , "," )
  , ( NormalTok , " " )
  , ( AttributeTok , "const" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "list_t" )
  , ( OperatorTok , "&" )
  , ( NormalTok , " vals" )
  , ( OperatorTok , ")" )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  ]
, [ ( NormalTok , "    " )
  , ( BuiltInTok , "std::" )
  , ( NormalTok , "set" )
  , ( OperatorTok , "<" )
  , ( DataTypeTok , "uint32_t" )
  , ( OperatorTok , ">" )
  , ( NormalTok , " used" )
  , ( OperatorTok , ";" )
  ]
, [ ( NormalTok , "    " )
  , ( ControlFlowTok , "while" )
  , ( NormalTok , " " )
  , ( OperatorTok , "(" )
  , ( NormalTok , "used" )
  , ( OperatorTok , "." )
  , ( NormalTok , "size" )
  , ( OperatorTok , "()" )
  , ( NormalTok , " " )
  , ( OperatorTok , "<" )
  , ( NormalTok , " w" )
  , ( OperatorTok , "." )
  , ( NormalTok , "size" )
  , ( OperatorTok , "())" )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  ]
, [ ( NormalTok , "        " )
  , ( AttributeTok , "const" )
  , ( NormalTok , " " )
  , ( DataTypeTok , "char" )
  , ( NormalTok , " c " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " toupper" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "w" )
  , ( OperatorTok , "[" )
  , ( NormalTok , "used" )
  , ( OperatorTok , "." )
  , ( NormalTok , "size" )
  , ( OperatorTok , "()]);" )
  ]
, [ ( NormalTok , "        " )
  , ( DataTypeTok , "uint32_t" )
  , ( NormalTok , " x " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " used" )
  , ( OperatorTok , "." )
  , ( NormalTok , "size" )
  , ( OperatorTok , "();" )
  ]
, [ ( NormalTok , "        " )
  , ( ControlFlowTok , "for" )
  , ( NormalTok , " " )
  , ( OperatorTok , "(" )
  , ( DataTypeTok , "uint32_t" )
  , ( NormalTok , " i " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " " )
  , ( DecValTok , "0" )
  , ( OperatorTok , "," )
  , ( NormalTok , " ii " )
  , ( OperatorTok , "=" )
  , ( NormalTok , " vals" )
  , ( OperatorTok , "." )
  , ( NormalTok , "size" )
  , ( OperatorTok , "();" )
  , ( NormalTok , " i " )
  , ( OperatorTok , "<" )
  , ( NormalTok , " ii" )
  , ( OperatorTok , ";" )
  , ( NormalTok , " " )
  , ( OperatorTok , "++" )
  , ( NormalTok , "i" )
  , ( OperatorTok , ")" )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  ]
, [ ( NormalTok , "            " )
  , ( ControlFlowTok , "if" )
  , ( NormalTok , " " )
  , ( OperatorTok , "(" )
  , ( NormalTok , "used" )
  , ( OperatorTok , "." )
  , ( NormalTok , "find" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "i" )
  , ( OperatorTok , ")" )
  , ( NormalTok , " " )
  , ( OperatorTok , "==" )
  , ( NormalTok , " used" )
  , ( OperatorTok , "." )
  , ( NormalTok , "end" )
  , ( OperatorTok , "())" )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  ]
, [ ( NormalTok , "                " )
  , ( ControlFlowTok , "if" )
  , ( NormalTok , " " )
  , ( OperatorTok , "(" )
  , ( NormalTok , "toupper" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "vals" )
  , ( OperatorTok , "[" )
  , ( NormalTok , "i" )
  , ( OperatorTok , "]." )
  , ( NormalTok , "first" )
  , ( OperatorTok , ")" )
  , ( NormalTok , " " )
  , ( OperatorTok , "==" )
  , ( NormalTok , " c " )
  , ( OperatorTok , "||" )
  , ( NormalTok , " toupper" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "vals" )
  , ( OperatorTok , "[" )
  , ( NormalTok , "i" )
  , ( OperatorTok , "]." )
  , ( NormalTok , "second" )
  , ( OperatorTok , ")" )
  , ( NormalTok , " " )
  , ( OperatorTok , "==" )
  , ( NormalTok , " c" )
  , ( OperatorTok , ")" )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  ]
, [ ( NormalTok , "                    used" )
  , ( OperatorTok , "." )
  , ( NormalTok , "insert" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "i" )
  , ( OperatorTok , ");" )
  ]
, [ ( NormalTok , "                    " )
  , ( ControlFlowTok , "break" )
  , ( OperatorTok , ";" )
  ]
, [ ( NormalTok , "                " ) , ( OperatorTok , "}" ) ]
, [ ( NormalTok , "            " ) , ( OperatorTok , "}" ) ]
, [ ( NormalTok , "        " ) , ( OperatorTok , "}" ) ]
, [ ( NormalTok , "        " )
  , ( ControlFlowTok , "if" )
  , ( NormalTok , " " )
  , ( OperatorTok , "(" )
  , ( NormalTok , "x " )
  , ( OperatorTok , "==" )
  , ( NormalTok , " used" )
  , ( OperatorTok , "." )
  , ( NormalTok , "size" )
  , ( OperatorTok , "())" )
  , ( NormalTok , " " )
  , ( ControlFlowTok , "break" )
  , ( OperatorTok , ";" )
  ]
, [ ( NormalTok , "    " ) , ( OperatorTok , "}" ) ]
, [ ( NormalTok , "    " )
  , ( ControlFlowTok , "return" )
  , ( NormalTok , " used" )
  , ( OperatorTok , "." )
  , ( NormalTok , "size" )
  , ( OperatorTok , "()" )
  , ( NormalTok , " " )
  , ( OperatorTok , "==" )
  , ( NormalTok , " w" )
  , ( OperatorTok , "." )
  , ( NormalTok , "size" )
  , ( OperatorTok , "();" )
  ]
, [ ( OperatorTok , "}" ) ]
, []
, []
, [ ( DataTypeTok , "int" )
  , ( NormalTok , " main" )
  , ( OperatorTok , "()" )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  ]
, [ ( NormalTok , "    " )
  , ( DataTypeTok , "list_t" )
  , ( NormalTok , " vals" )
  , ( OperatorTok , "{" )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( CharTok , "'B'" )
  , ( OperatorTok , "," )
  , ( CharTok , "'O'" )
  , ( OperatorTok , "}," )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( CharTok , "'X'" )
  , ( OperatorTok , "," )
  , ( CharTok , "'K'" )
  , ( OperatorTok , "}," )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( CharTok , "'D'" )
  , ( OperatorTok , "," )
  , ( CharTok , "'Q'" )
  , ( OperatorTok , "}," )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( CharTok , "'C'" )
  , ( OperatorTok , "," )
  , ( CharTok , "'P'" )
  , ( OperatorTok , "}," )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( CharTok , "'N'" )
  , ( OperatorTok , "," )
  , ( CharTok , "'A'" )
  , ( OperatorTok , "}," )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( CharTok , "'G'" )
  , ( OperatorTok , "," )
  , ( CharTok , "'T'" )
  , ( OperatorTok , "}," )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( CharTok , "'R'" )
  , ( OperatorTok , "," )
  , ( CharTok , "'E'" )
  , ( OperatorTok , "}," )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( CharTok , "'T'" )
  , ( OperatorTok , "," )
  , ( CharTok , "'G'" )
  , ( OperatorTok , "}," )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( CharTok , "'Q'" )
  , ( OperatorTok , "," )
  , ( CharTok , "'D'" )
  , ( OperatorTok , "}," )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( CharTok , "'F'" )
  , ( OperatorTok , "," )
  , ( CharTok , "'S'" )
  , ( OperatorTok , "}," )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( CharTok , "'J'" )
  , ( OperatorTok , "," )
  , ( CharTok , "'W'" )
  , ( OperatorTok , "}," )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( CharTok , "'H'" )
  , ( OperatorTok , "," )
  , ( CharTok , "'U'" )
  , ( OperatorTok , "}," )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( CharTok , "'V'" )
  , ( OperatorTok , "," )
  , ( CharTok , "'I'" )
  , ( OperatorTok , "}," )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( CharTok , "'A'" )
  , ( OperatorTok , "," )
  , ( CharTok , "'N'" )
  , ( OperatorTok , "}," )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( CharTok , "'O'" )
  , ( OperatorTok , "," )
  , ( CharTok , "'B'" )
  , ( OperatorTok , "}," )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( CharTok , "'E'" )
  , ( OperatorTok , "," )
  , ( CharTok , "'R'" )
  , ( OperatorTok , "}," )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( CharTok , "'F'" )
  , ( OperatorTok , "," )
  , ( CharTok , "'S'" )
  , ( OperatorTok , "}," )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( CharTok , "'L'" )
  , ( OperatorTok , "," )
  , ( CharTok , "'Y'" )
  , ( OperatorTok , "}," )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( CharTok , "'P'" )
  , ( OperatorTok , "," )
  , ( CharTok , "'C'" )
  , ( OperatorTok , "}," )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  , ( CharTok , "'Z'" )
  , ( OperatorTok , "," )
  , ( CharTok , "'M'" )
  , ( OperatorTok , "}" )
  , ( NormalTok , " " )
  , ( OperatorTok , "};" )
  ]
, [ ( NormalTok , "    " )
  , ( BuiltInTok , "std::" )
  , ( NormalTok , "vector" )
  , ( OperatorTok , "<" )
  , ( BuiltInTok , "std::" )
  , ( NormalTok , "string" )
  , ( OperatorTok , ">" )
  , ( NormalTok , " words" )
  , ( OperatorTok , "{" )
  , ( StringTok , "\"A\"" )
  , ( OperatorTok , "," )
  , ( StringTok , "\"BARK\"" )
  , ( OperatorTok , "," )
  , ( StringTok , "\"BOOK\"" )
  , ( OperatorTok , "," )
  , ( StringTok , "\"TREAT\"" )
  , ( OperatorTok , "," )
  , ( StringTok , "\"COMMON\"" )
  , ( OperatorTok , "," )
  , ( StringTok , "\"SQUAD\"" )
  , ( OperatorTok , "," )
  , ( StringTok , "\"CONFUSE\"" )
  , ( OperatorTok , "};" )
  ]
, [ ( NormalTok , "    " )
  , ( ControlFlowTok , "for" )
  , ( NormalTok , " " )
  , ( OperatorTok , "(" )
  , ( AttributeTok , "const" )
  , ( NormalTok , " " )
  , ( BuiltInTok , "std::" )
  , ( NormalTok , "string" )
  , ( OperatorTok , "&" )
  , ( NormalTok , " w " )
  , ( OperatorTok , ":" )
  , ( NormalTok , " words" )
  , ( OperatorTok , ")" )
  , ( NormalTok , " " )
  , ( OperatorTok , "{" )
  ]
, [ ( NormalTok , "        " )
  , ( BuiltInTok , "std::" )
  , ( NormalTok , "cout" )
  , ( OperatorTok , " <<" )
  , ( NormalTok , " w " )
  , ( OperatorTok , "<<" )
  , ( NormalTok , " " )
  , ( StringTok , "\": \"" )
  , ( NormalTok , " " )
  , ( OperatorTok , "<<" )
  , ( NormalTok , " " )
  , ( BuiltInTok , "std::" )
  , ( NormalTok , "boolalpha" )
  , ( OperatorTok , " <<" )
  , ( NormalTok , " can_make_word" )
  , ( OperatorTok , "(" )
  , ( NormalTok , "w" )
  , ( OperatorTok , "," )
  , ( NormalTok , "vals" )
  , ( OperatorTok , ")" )
  , ( NormalTok , " " )
  , ( OperatorTok , "<<" )
  , ( NormalTok , " " )
  , ( StringTok , "\"." )
  , ( SpecialCharTok , "\\n" )
  , ( StringTok , "\"" )
  , ( OperatorTok , ";" )
  ]
, [ ( NormalTok , "    " ) , ( OperatorTok , "}" ) ]
, []
, [ ( OperatorTok , "}" ) ]
]
